{%- if not swarm_mode %}
{%- for service_name, service in services.iteritems() %}
upstream {{ service_name|lower }} {
    {%- if service.balancing_type %}
    {{ service['balancing_type'] }};
    {%- endif %}
    {%- for address in service['addresses'] %}
    server {{ address }}:{{ services[service_name]['port'] }};
    {%- endfor %}
}

{%- endfor %}
{%- endif %}
server {
    listen 80 default_server;
    server_name _;
    ignore_invalid_headers off;
    return 404;
}

{%- for hostname, host in hosts.iteritems() %}
{%- if host['protocols']['http'] %}
server {
{%- if swarm_mode %}
    resolver {{ dns_servers }} valid=30s;
{%- endif %}
    listen 80;
    server_name {{ hostname }};

    {%- if host['error_log'] %}
    error_log {{ host['error_log'] }} {{ host['log_level'] }};
    {%- endif %}
    {%- if host['access_log'] %}
    access_log {{ host['access_log'] }};
    {%- endif %}

    root /usr/share/nginx/html;
    proxy_read_timeout 5m;
    proxy_send_timeout 5m;
    client_max_body_size 20m;
    {%- for service_name in host['services'] %}

    # For service: {{ service_name }}
    location {{ services[service_name]['location'] }} {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        {%- if swarm_mode %}
        proxy_pass http://{{ services[service_name]['addresses'][0] }}:{{ services[service_name]['port'] }}{{ services[service_name]['remote_path'] }};
        proxy_redirect http://{{ services[service_name]['addresses'][0] }}:{{ services[service_name]['port'] }}{{ services[service_name]['remote_path'] }} $scheme://{{ hostname }}{{ services[service_name]['remote_path'] }};
        {%- else %}
        proxy_pass http://{{service_name|lower}}{{services[service_name]['remote_path']}};
        proxy_redirect http://{{service_name|lower}}{{services[service_name]['remote_path']}}  $scheme://{{ hostname }}{{ services[service_name]['remote_path'] }};
        {%- endif %}
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
    }{% endfor %}
}
{%- else %}
server {
{%- if swarm_mode %}
    resolver {{ dns_servers }} valid=30s;
{%- endif %}
    listen 80;
    server_name {{ hostname }};

    {%- if host['error_log'] %}
    error_log {{ host['error_log'] }} {{ host['log_level'] }};
    {%- endif %}
    {%- if host['access_log'] %}
    access_log {{ host['access_log'] }};
    {%- endif %}

    root /usr/share/nginx/html;
    {%- for service_name in host['services'] %}

    # For service: {{ service_name }}
    location {{ services[service_name]['location'] }} {
        return 301 https://$host$request_uri;
    }{% endfor %}
}
{%- endif %}
{%- if host['protocols']['https'] %}
server {
{%- if swarm_mode %}
    resolver {{ dns_servers }} valid=30s;
{%- endif %}
    listen 443;
    server_name {{ hostname }};

    {%- if host['error_log'] %}
    error_log {{ host['error_log'] }} {{ host['log_level'] }};
    {%- endif %}
    {%- if host['access_log'] %}
    access_log {{ host['access_log'] }};
    {%- endif %}

    root /usr/share/nginx/html;
    proxy_read_timeout 5m;
    proxy_send_timeout 5m;
    client_max_body_size 20m;

    ssl on;
    ssl_certificate {{ host['ssl_certificate'] }};
    ssl_certificate_key {{ host['ssl_certificate_key'] }};
    
    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam {{ host['ssl_dhparam'] }};

    ssl_session_timeout 5m;

    ssl_protocols {{ host['ssl_protocols'] }};
    ssl_ciphers {{ host['ssl_ciphers'] }};
    ssl_prefer_server_ciphers on;

    {%- for service_name in host['services'] %}
    # For service: {{ service_name }}
    location {{ services[service_name]['location'] }} {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        {%- if swarm_mode %}
        proxy_pass http://{{ services[service_name]['addresses'][0] }}:{{ services[service_name]['port'] }}{{ services[service_name]['remote_path'] }};
        proxy_redirect http://{{ services[service_name]['addresses'][0] }}:{{ services[service_name]['port'] }}{{ services[service_name]['remote_path'] }} $scheme://{{ hostname }}{{ services[service_name]['remote_path'] }};
        {%- else %}
        proxy_pass http://{{service_name|lower}}{{services[service_name]['remote_path']}};
        proxy_redirect http://{{service_name|lower}}{{services[service_name]['remote_path']}}  $scheme://{{ hostname }}{{ services[service_name]['remote_path'] }};
        {%- endif %}
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
    }{%- endfor %}
}
{%- endif %}
{%- endfor %}
